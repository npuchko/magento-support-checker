#!/usr/bin/env bash

getSourceDirOfScript () {
  local SOURCE=${BASH_SOURCE[0]}
  while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
    DIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )
    SOURCE=$(readlink "$SOURCE")
    [[ $SOURCE != /* ]] && SOURCE=$DIR/$SOURCE # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
  done
  local SCRIPT_DIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )

  echo $SCRIPT_DIR
}

printHelp () {
  echo ""
  echo "Run syntax"
  echo "msc {cloud_project_id} {cloud_env_id} {check_id}"
  echo ""
  printAvailableChecks
}

printAvailableChecks () {
  echo "Available checks:"
  echo "all - run all checks"
  echo "general - run only general checks"
  echo "advanced_reporting - run only advanced_reporting"
  echo "product_recommendations - run only product_recommendations"
  echo "live_search - run only live_search"
  echo ""
}


SCRIPT_DIR=$(getSourceDirOfScript)

CURRENT_VERSION=$(cat ${SCRIPT_DIR}/version.txt)
LAST_VERSION=$(curl -H 'Cache-Control: no-cache, no-store' https://raw.githubusercontent.com/npuchko/magento-support-checker/master/version.txt)


if [ "$CURRENT_VERSION" != "$LAST_VERSION" ]
  then
    echo ""
    echo ""
    echo -e "Version of checker \033[31m$CURRENT_VERSION\033[0m"
    echo -e "Latest version is \033[32m$LAST_VERSION\033[0m"
    echo -e "\033[31m============================================================================================"
    echo -e "The new version available! Please update https://github.com/npuchko/magento-support-checker"
    echo -e "Just run \033[32mcd $SCRIPT_DIR && git fetch && git pull\033[0m"
    echo -e "============================================================================================\033[0m"
    echo ""
    echo ""
  else
    echo -e "Version of checker \033[32m$CURRENT_VERSION\033[0m"
fi;


if [ "$1" == "help" ]
then
    printHelp
    exit
fi

if [ -z "$1" ]
then
      read -p 'Enter cloud project ID: ' CLOUD_PROJECT_ID
else
  CLOUD_PROJECT_ID=$1

  echo "Cloud project ID  is: ${CLOUD_PROJECT_ID}"
fi

if [ -z "$2" ]
then
      magento-cloud env:list -p ${CLOUD_PROJECT_ID} -I --format plain --pipe
      read -p 'Enter environment ID: ' CLOUD_ENV_ID
else
  CLOUD_ENV_ID=$2

  echo "Cloud environment ID  is: ${CLOUD_ENV_ID}"
fi

if [ -z "$3" ]
then
      printAvailableChecks
      read -p 'Enter check ID: ' CHECK_ID
else
  CHECK_ID=$3

  echo "CHECK_ID  is: ${CHECK_ID}"
fi


echo "Uploading script ${SCRIPT_DIR}/magento_support_checker.phar"
magento-cloud scp -p ${CLOUD_PROJECT_ID} -e ${CLOUD_ENV_ID} ${SCRIPT_DIR}/magento_support_checker.phar remote:var/
magento-cloud ssh -p ${CLOUD_PROJECT_ID} -e ${CLOUD_ENV_ID} "php var/magento_support_checker.phar ${CHECK_ID}"
echo "Removing script"
magento-cloud ssh -p ${CLOUD_PROJECT_ID} -e ${CLOUD_ENV_ID} "rm var/magento_support_checker.phar"
